[tool.poetry]
name = "qa-generator"
version = "0.0.1"
description = "This is a Streamlit application that generates questions and answers from an uploaded PDF document. It is useful for teachers, professors, or event organizers who need to prepare exam questions or quick tests."
authors = ["NanthagopalEswaran <nanthagopaleswaran@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "qa_generator", from = "." }]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
streamlit = "^1.30.0"
langchain = "^0.1.4"
langchain-openai = "^0.0.5"
llama-index = "^0.10.30"


[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-cov = "^5.0.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.4.1"
mypy = "^1.9.0"
pre-commit = "^3.7.0"


[tool.ruff]
# Allow lines to be as long as 100.
line-length = 100


[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "B",  # flake8-bugbear
    "I",  # isort
    "C",  # pylint convention
    "A",  # flake8-builtins
    "N",  # pep8-naming
    "ASYNC",  # flake8-async
    "C4",  # flake8-comprehensions
]
ignore = [
    "E501",  # line too long, handled by formatter
    "W191",  # indentation contains tabs
]

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
